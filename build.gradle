plugins {
    id "java"
    id "application"
    id "com.gradleup.shadow" version "8.3.0"
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.0.1"
    id "eclipse"
}

group = "net.justapie"
version = "1.0.0"

application {
    mainClass = "net.justapie.smgmt.Main"
}

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }

    maven {
        url = "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

dependencies {
    compileOnly("com.velocitypowered:velocity-api:3.3.0-SNAPSHOT")
    annotationProcessor("com.velocitypowered:velocity-api:3.3.0-SNAPSHOT")

    implementation("dev.morphia.morphia:morphia-core:3.0.0-SNAPSHOT")
    implementation("org.apache.commons:commons-text:1.12.0")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

def templateSource = file("src/main/templates")
def templateDest = layout.buildDirectory.dir("generated/sources/templates")
def generateTemplates = tasks.register("generateTemplates", Copy) { task ->
    def props = [
            "version": project.version
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })

rootProject.idea.project.settings.taskTriggers.afterSync generateTemplates
project.eclipse.synchronizationTasks(generateTemplates)